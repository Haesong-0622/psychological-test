def main():
    while True:
        print("\n안녕하세요! 어떤 심리테스트를 진행하실 건가요?")
        print("1. MBTI(12문제)")
        print("2. 사이코패스 테스트(20문제)")
        print("3. 가치관 심리 테스트(1문제)")
        print("4. 성인애착유형 테스트(33문제)")
        print("5. 연애 심리 테스트(1문제)")
        
        choice = input("번호를 선택하세요 (1-5): ")

        if choice == '1':
            print("\n\033[33mMBTI 테스트를 선택하셨습니다.\033[0m")
            mbti_test()
        elif choice == '2':
            print("\n\033[33m사이코패스 테스트를 선택하셨습니다.\033[0m")
            psychopath_test()
        elif choice == '3':
            print("\n\033[33m가치관 심리 테스트를 선택하셨습니다.\033[0m")
            value_test()
        elif choice == '4':
            print("\n\033[33m성인애착유형 테스트를 선택하셨습니다.\033[0m")
            attachment_test()
        elif choice == '5':
            print("\n\033[33m연애 심리 테스트를 선택하셨습니다.\033[0m")
            love_psychology_test()

        else:
            print("\n\033[31m잘못된 선택입니다. 1에서 5 사이의 번호를 선택해 주세요.\033[0m")
            continue

        # 테스트가 종료된 후, 다시 실행 여부 확인
        if not continue_or_exit():
            print("\n프로그램을 종료합니다.")
            break

def continue_or_exit():
    while True:
        print("\n테스트를 종료하시겠습니까? 다른 테스트를 진행하시겠습니까?")
        print("1. 종료하기")
        print("2. 다른 테스트 진행하기")
        
        choice = input("번호를 선택하세요 (1-2): ")
        
        if choice == '1':
            return False
        elif choice == '2':
            return True
        else:
            print("\n\033[31m잘못된 선택입니다. 1 또는 2를 선택해 주세요.\033[0m")

def mbti_test():
    print("이 테스트는 총 12개의 질문으로 이루어져 있습니다. 질문을 읽고 a, b 중 자신에게 맞는 답변을 골라 입력해주세요.\n")
    
    questions = [
        ("1.친구들과 놀이공원에 간 나, 롤러코스터를 타기 전 내 머릿속은?\n a. 두근두근!! 재밌겠다 & 무섭다.\n b. 이거 안전바 풀리는 거 아냐?", 's', 'n'),
        ("2.롤러코스터가 출발하고 알바생들이 손인사를 한다. 내 반응은?\n a. 격하게 손을 흔들며 신나한다.\n b. 어색하게 흔든다 & 안 흔든다.", 'e', 'i'),
        ("3.놀이 기구를 타고 기념품 숍에 갔는데 친구가 쓸데없는 선물을 서로 사주자고 한다.\n a. 좋아 재밌겠다 추억이 될 듯\n b. 비싼데 뭐 하러 쓸데없는걸?", 'f', 't'),
        ("4.배가 고파서 밥을 먹으러 가는 우리, 내가 알아본 식당은?\n a. 맛있다는 곳 1군데\n b. 변수가 생길지도 모르니 2군데 이상", 'p', 'j'),
        ("5.밥을 먹다가 무서운 얘기가 나왔다. 여기 사실 숨겨진 놀이 기구가 있대.. 겪어본 사람이 있대\n a. 에이~(내가 겪지 않았으니 안 믿음)\n b. 헐!!(흥미진진 벌써 빠져들었음)", 's', 'n'),
        ("6. 퍼레이드를 보러 온 우리, 친구들이 춤을 추기 시작한다.\n a. 당연히 나도 따라 춤을 춘다.\n b. 실시간으로 기가 빨린다.", 'e', 'i'),
        ("7.이제 집에 갈 시간, 친구의 이 말에 기분이 좋아졌다.\n a. 너랑 놀아서 너무 행복했어\n b. 너랑 놀면 똑똑해서 손해 볼 일이 없다.", 'f', 't'),
        ("8.집에 가는 길, 친구가 방향이 같다고 같이 가자고 한다.\n a. 그래 좋지! 가는 길 안 심심하겠다.\n b. 그래~(집은 혼자 가고 싶었는데)", 'e', 'i'),
        ("9.친구와 대화 중에 초능력 드라마 얘기가 나왔다.\n a. 드라마가 재밌는지에 초점을 두고 얘기한다.\n b. 초능력에 대해 초점을 두고 얘기한다.", 's', 'n'),
        ("10.요즘 사는 게 어떻냐는 친구의 질문에 나는\n a. 내 인생에 특별한 이벤트가 생겼으면 좋겠어\n b. 난 그냥 매일 같은 하루였으면 좋겠어", 'p', 'j'),
        ("11.친구와 헤어지려는데 갑자기 난 그냥 네가 너무 좋아라고 한다.\n a. 친구의 말에 감동을 받는다.\n b. (그냥? 왜? 갑자기? 이유가 뭐지)", 'f', 't'),
        ("12.집에 돌아와 내일 알람 시간을 맞추는 나, 지금 내 머릿속엔?\n a. 아 지금 자면 몇 시간 잘 수 있지?\n b. 몇 시에 일어나서 몇 시까지 준비하면 되겠다.", 'p', 'j')
    ]

    scores = {
        'e': 0,
        'i': 0,
        's': 0,
        'n': 0,
        'f': 0,
        't': 0,
        'p': 0,
        'j': 0
    }

    for question, option_a, option_b in questions:
        while True:  # 올바른 답이 입력될 때까지 반복
            answer = input('\n'+ question + "\n답변 (a/b): ").strip().lower()
            if answer == 'a':
                scores[option_a] += 1
                break  # 올바른 답변이면 루프 탈출
            elif answer == 'b':
                scores[option_b] += 1
                break
            else:
                print("\n\033[31m잘못된 입력입니다. 다시 입력해주세요.\033[0m")

    e_i = 'e' if scores['e'] > scores['i'] else 'i'
    s_n = 's' if scores['s'] > scores['n'] else 'n'
    f_t = 'f' if scores['f'] > scores['t'] else 't'
    p_j = 'p' if scores['p'] > scores['j'] else 'j'

    mbti_result = e_i + s_n + f_t + p_j
    print("\n\033[33m당신의 MBTI 유형은:\033[0m", mbti_result)


def psychopath_test():
    questions = [
        "이익을 위해서라면 약속을 깨도 상관없다.",
        "자존감이 과도하게 높다.",
        "일상 생활에서 자극적인 요소가 필요하다.",
        "거짓말을 해도 아무렇지도 않다.",
        "사람을 다루는데 능숙해서 원하는 것을 쉽게 얻어낼 수 있다.",
        "죄책감을 잘 느끼지 않는다.",
        "다른 사람의 감정에 공감하기 어렵다.",
        "고통받는 동물을 봐도 아무렇지도 않다.",
        "남에게 빌붙어 살아도 상관없다.",
        "자제력이 부족한 편이다.",
        "쉽게 성적인 행동에 빠져든다.",
        "어릴 때 나쁜 짓을 자주 했다.",
        "현실적이고 장기적인 목표가 없다.",
        "충동적으로 행동할 때가 많다.",
        "책임감이 부족한 편이다.",
        "자신의 행동에 대한 책임감을 느끼기가 어렵다.",
        "기간이 짧은 많은 연애에 이끌린다.",
        "필요에 따라 사랑하는 사람을 배신할 수 있다.",
        "범죄를 저질러도 아무렇지도 않다.",
        "범죄적인 재능이 타고났다고 생각하거나 그것에 관심이 있다."
    ]
    
    total_score = 0
    for i, question in enumerate(questions):
        print("\n%d. %s" % (i + 1, question))
        print("\n1. 그렇지 않다, 2. 보통 정도이다, 3. 그렇다")
        
        while True:
            try:
                answer = int(input("답변을 선택하세요 (1-3): "))
                if 1 <= answer <= 3:
                    total_score += answer - 1
                    break
                else:
                    print("\n\033[31m1에서 3 사이의 숫자를 입력해 주세요.\033[0m")
            except ValueError:
                print("숫자를 입력해 주세요.")

    print("\n\033[33m결과:\033[0m")
    if total_score <= 10:
        result = "당신은 천사입니다. 사이코패스가 아닙니다."
    elif total_score <= 18:
        result = "정상입니다. 당신은 사이코패스가 아닙니다."
    elif total_score <= 24:
        result = "주의하세요. 당신은 사이코패스 기질이 약간 있습니다."
    else:
        result = "당신은 사이코패스입니다."

    print("총 점수: %.3f" % total_score)
    print(result)


def value_test():
    print("아래의 이야기를 읽고 이야기 속 다섯 사람 중 가장 나쁜 사람이라고 생각하는 한 사람을 선택해주세요.")
    print("\n사랑하는 사이인 \033[33m음악가(여)\033[0m와 \033[33m시인(남)\033[0m은 강을 사이에 두고 만나지 못합니다.")
    print("강을 건너려면 \033[33m뱃사공\033[0m에게 배값을 주어야 하지만 음악가와 시인은 돈이 없어 만날 수가 없습니다.")
    print("음악가는 뱃사공에게 태워달라고 애원했지만, 뱃사공은 배값이 없다면 태워줄 수 없다고 단호하게 거절합니다.")
    print("이때 음악가를 짝사랑하던 \033[33m사업가\033[0m가 음악가에게 이런 제안을 합니다.")
    print('"나와 하룻밤을 보내면 배를 탈 수 있는 돈을 주겠소"라고 말입니다.')
    print("시인이 보고 싶은 음악가는 어쩔 수 없이 사업가의 제안을 수락하고 맙니다.")
    print("이를 본 \033[33m시인의 친구\033[0m는 음악가와 사업가의 관계를 시인에게 알렸습니다.")
    print("한편 음악가는 사업가에게 받은 돈으로 배를 타고 시인을 만나러 갔습니다.")
    print("음악가는 마침내 시인을 만나서 기뻤지만, 시인은 음악가와 사업가의 관계를 알고 화를 내며 힘들게 건너온 음악가에게 이별을 고합니다.")

    print("\n1. 사업가와 하룻밤을 보낸 음악가")
    print("2. 음악가에게 이별을 고한 시인")
    print("3. 공짜로 태워주지 않은 뱃사공")
    print("4. 음악가를 짝사랑하는 사업가")
    print("5. 시인에게 알려준 친구")

    # 잘못된 선택 시 반복
    while True:
        choice = input("번호를 선택하세요 (1-5): ")
        
        # 선택한 번호에 따른 결과
        if choice == '1':
            result = ("당신이 가장 중요하게 생각하는 가치는 '애인' 또는 '배우자'입니다.\n"
                      "당신은 사랑하는 사람과의 관계와 그 사람을 최우선으로 생각하는 경향이 강합니다.")
            break
        elif choice == '2':
            result = ("당신이 가장 중요하게 생각하는 가치는 '자기 자신'입니다.\n"
                      "당신은 자신을 돌보고 자아 존중감을 유지하는 것이 최우선이라고 생각하는 사람입니다.")
            break
        elif choice == '3':
            result = ("당신이 가장 중요하게 생각하는 가치는 '자신의 일'입니다.\n"
                      "당신은 자신이 맡은 일을 매우 중요하게 생각하며, 업무의 성실성을 중시하는 성향이 있습니다.")
            break
        elif choice == '4':
            result = ("당신이 가장 중요하게 생각하는 가치는 '인생의 목표'입니다.\n"
                      "당신은 목표와 야망을 이루기 위해 집중하며, 이를 위해 많은 노력을 기울입니다.")
            break
        elif choice == '5':
            result = ("당신이 가장 중요하게 생각하는 가치는 '친구'입니다.\n"
                      "당신은 친구 관계를 소중히 여기고, 친구를 위해 헌신할 준비가 되어 있는 사람입니다.")
            break
        else:
            print("\n\033[31m잘못된 선택입니다. 1에서 5 사이의 번호를 선택해 주세요.\033[0m")

    print("\n\033[33m결과:\033[0m")
    print(result)


def attachment_test():
    questions = [
        "내가 얼마나 호감을 가지고 있는지 상대방에게 보이고 싶지 않다.",
        "나는 버림을 받는 것에 대해 걱정하는 편이다.",
        "나는 다른 사람과 가까워지는 것이 매우 편안하다.",
        "상대방이 막 나와 친해지려고 할 때 꺼려하는 나를 발견한다.",
        "내가 다른 사람에게 관심을 가지는 만큼 그들이 나에게 관심을 가지지 않을까봐 걱정이다.",
        "나는 다른 사람이 나와 매우 가까워지려 할 때 불편하다.",
        "나는 나와 친한 사람을 잃을까봐 꽤 걱정이 된다.",
        "나는 다른 사람에게 마음을 여는 것이 편안하지 못하다.",
        "나는 종종 내가 상대방에게 호의를 보이는 만큼 상대방도 그렇게 해 주기를 바란다.",
        "나는 상대방과 가까워지기를 원하지만 나는 생각을 바꾸어 그만둔다.",
        "나는 상대방과 하나가 되길 원하기 때문에 사람들이 때때로 나에게서 멀어진다.",
        "나는 다른 사람이 나와 너무 가까워졌을 때 예민해진다.",
        "나는 혼자 남겨질까봐 걱정이다.",
        "나는 다른 사람에게 내 생각과 감정을 이야기하는 것이 편안하다.",
        "지나치게 친밀해지고자 하는 욕심 때문에 때로 사람들이 두려워하여 거리를 둔다.",
        "나는 상대방으로부터 사랑받고 있다는 것을 자주 확인받고 싶어한다.",
        "나는 다른 사람과 가까워지는 것이 비교적 쉽다.",
        "가끔 나는 다른 사람에게 더 많은 애정과 더 많은 헌신을 보여줄 것을 강요한다고 느낀다.",
        "나는 다른 사람에게 의지하기가 어렵다.",
        "나는 버림받는 것에 대해 때때로 걱정하지 않는다.",
        "나는 다른 사람과 너무 가까워지는 것을 좋아하지 않는다.",
        "만약 상대방이 나에게 관심을 보이지 않는다면 나는 화가난다.",
        "나는 상대방에게 모든 것을 이야기한다.",
        "상대방이 내가 원하는 만큼 가까워지는 것을 원치 않음을 안다.",
        "나는 대개 다른 사람에게 내 문제와 고민을 상의한다.",
        "내가 다른 사람과 교류가 없을 때 나는 다소 걱정스럽고 불안하다.",
        "다른 사람에게 의지하는 것이 편안하다.",
        "상대방이 내가 원하는 만큼 가까이에 있지 않을 때 실망하게 된다.",
        "나는 상대방에게 위로, 조언, 또는 도움을 청하지 못한다.",
        "내가 필요로 할 때 상대방이 거절한다면 실망하게 된다.",
        "상대방이 나에게 불만을 나타낼 때, 나 자신이 정말 형편없게 느껴진다.",
        "나는 위로와 확신을 비롯한 많은 일들을 상대방에게 의지한다.",
        "상대방이 나를 떠나서 많은 시간을 보냈을 때 나는 불쾌하다."
    ]
    
    responses = []
    for i, question in enumerate(questions):
        print("\n%d. %s" % (i + 1, question))
        print("\n1. 전혀 그렇지 않다, 2. 그렇지 않다, 3. 보통 정도이다, 4. 대체로 그렇다, 5. 매우 그렇다")
        
        while True:
            try:
                answer = int(input("답변을 선택하세요 (1-5): "))
                if 1 <= answer <= 5:
                    responses.append(answer)
                    break
                else:
                    print("\n\033[31m1에서 5 사이의 숫자를 입력해 주세요.\033[0m")
            except ValueError:
                print("숫자를 입력해 주세요.")

    avoidance_score = sum(responses[i] for i in range(0, len(responses), 2)) / 18
    anxiety_score = sum(responses[i] for i in range(1, len(responses), 2)) / 18

    if avoidance_score < 2.33 and anxiety_score < 2.61:
        attachment_type = "안정애착"
        description = ("안정애착을 가진 사람들은 자신의 감정을 잘 조절하고, 친밀한 관계를 형성하는 데 편안함을 느낍니다. "
                       "이들은 타인과 신뢰를 바탕으로 깊은 관계를 맺으며, 자신이 사랑받고 있다는 확신을 가지고 있습니다. "
                       "또한, 갈등 상황에서도 비교적 차분하게 대응하고 관계를 유지하는 능력이 뛰어납니다.\n"
                       "장점: 정서적 안정이 높아 다양한 대인 관계에서 건강한 소통을 이끌어내고, 상대방을 존중하는 태도를 유지합니다.")
    elif avoidance_score < 2.33 and anxiety_score >= 2.61:
        attachment_type = "몰입애착"
        description = ("몰입애착을 가진 사람들은 관계에서 높은 불안감을 느끼며, 자주 상대방의 관심과 사랑을 확인하려 합니다. "
                       "이들은 종종 상대가 자신을 버리거나 사랑하지 않을까 걱정하며, 이러한 불안으로 인해 관계에서 과도한 집착을 보이기도 합니다.\n"
                       "장점: 상대방에 대한 애정이 깊고 헌신적이지만, 지나친 불안으로 인해 관계의 안정성을 스스로 방해할 가능성이 있습니다.\n"
                       "주의점: 이러한 불안을 줄이기 위해 자아 존중감을 높이고, 독립적인 활동을 통해 심리적 균형을 맞추는 것이 도움이 될 수 있습니다.")
    elif avoidance_score >= 2.33 and anxiety_score < 2.61:
        attachment_type = "거부형 회피애착"
        description = ("거부형 회피애착을 가진 사람들은 타인과의 친밀함에 불편함을 느끼며, 종종 감정적으로 거리를 둡니다. "
                       "이들은 자신을 보호하기 위해 독립성을 강조하고, 자신의 감정을 억제하거나 숨기려는 경향이 있습니다. "
                       "관계에서 자주 상대방을 멀리하고, 필요 이상으로 방어적인 태도를 보입니다.\n"
                       "장점: 독립적이고 자립심이 강하지만, 관계에서 깊은 신뢰를 쌓는 데 어려움을 겪을 수 있습니다.\n"
                       "주의점: 타인과의 연결을 두려워하지 않고, 감정을 자연스럽게 나누는 연습이 관계의 깊이를 더하는 데 도움이 됩니다.")
    else:
        attachment_type = "공포형 회피애착"
        description = ("공포형 회피애착을 가진 사람들은 친밀한 관계를 원하면서도 동시에 두려워하는 모순적인 성향을 보입니다. "
                       "이들은 다른 사람과 가까워지고 싶지만, 동시에 상처받을까 두려워 가까워지기를 회피합니다. "
                       "이러한 이중적인 태도로 인해 관계에서 혼란과 갈등을 자주 경험합니다.\n"
                       "장점: 감정적으로 풍부하고 깊이 있는 성향이지만, 두려움으로 인해 안정된 관계를 유지하기 어렵습니다.\n"
                       "주의점: 이러한 두려움을 인식하고, 차분히 신뢰를 쌓아가는 과정을 통해 관계에서의 불안감을 극복할 수 있습니다.")

    print("\n\033[33m결과:\033[0m")
    print("회피 점수: %.3f" % avoidance_score)
    print("불안 점수: %.3f" % anxiety_score)
    print("당신의 애착 유형은 '%s'입니다.\n" % attachment_type)
    print("\033[33m설명:\033[0m")
    print(description)



def love_psychology_test():
    print("\n당신에게는 절친한 친구가 있습니다.")
    print("그 친구가 사귀는 사이라며 한 사람을 소개해줍니다.")
    print("하지만 누가 봐도 정말 비호감인 친구의 연인, 이럴 때 당신은 친구에게 뭐라고 하시겠습니까?")
    
    print("\n1. 너가 뭐가 아쉬워 저런 사람을 만나냐, 너가 아깝다")
    print("2. 너의 이상형 같지는 않지만 그래도 천천히 한 번 만나봐")
    print("3. 너만 좋다면 좋은거지~ 너희 둘 잘 어울리네")
    print("4. 이 사람 저 사람 많이 만나봐. 저 사람한테만 너무 목매지 말고")

    while True:  # 올바른 입력이 있을 때까지 반복
        choice = input("번호를 선택하세요 (1-4): ")

        if choice == '1':
            result = ("당신은 연애엔 아무 생각 없는 연애 낙제생입니다.\n"
                      "인생에 대해서는 기본적인 관심은 있지만 연애의 심리나 이성의 심리에는 선천적으로 약한 성향입니다.\n"
                      "거기에 결벽증까지 있어서 운명적인 사람이 아니면 거들떠보지도 않는 당신.\n"
                      "당신의 그 깔끔한 매력에 반하는 사람은 있어도 대개 이성이 당신의 사랑을 눈치채기 전에 먼저 포기하고 떠나 버릴 것입니다.\n"
                      "그래서 당신은 사랑의 신뢰를 갖고 적당한 밀고 당기기가 사랑의 기본이란 걸 믿고 받아들여야 합니다.")
            break
        elif choice == '2':
            result = ("당신은 연애에 관해 헛똑똑이형입니다.\n"
                      "생각이 너무 많아 아무것도 못하는 성향이지만 매력도 있고 연애 심리에도 능통한 당신.\n"
                      "하지만 당신은 생각이 너무 많고 우유부단해서 눈앞에 있는 사랑도 놓치기 쉽습니다.\n"
                      "친구의 연애 문제는 척척 해결해주면서 정작 자기 연애 문제는 해결하지 못하는 전형적인 헛똑똑이형입니다.\n"
                      "이런 당신의 문제는 자존심이 세서 좋은 사람을 놓치는 것입니다.\n"
                      "그래서 먼저 마음을 여시길 바랍니다. 상대가 다가오기만을 기다리면 사랑은 당신에게 힘든 일일 것입니다.")
            break
        elif choice == '3':
            result = ("당신은 스포츠맨형으로 사랑을 승부로 여기는 정열가 성향입니다.\n"
                      "우정이냐 사랑이냐 따지기보다는 먼저 승부욕이 발동하는 성격이에요.\n"
                      "그렇기에 당신은 외모나 능력에 지나치게 자신 있거나 그 반대일 것입니다.\n"
                      "연애 심리를 잘 알아서 이성을 다룰 때 지능적이고 능숙하지만 과도한 열정 때문에 실수를 할 수 있습니다.\n"
                      "그래서 상대에게 주도권을 빼앗겨주는 기술도 쓸 줄 알아야 할 것입니다.")
            break
        elif choice == '4':
            result = ("당신은 한마디로 왕자병 공주병 성향입니다.\n"
                      "지나친 자신감이 문제인 나르시스트형입니다.\n"
                      "지금까지 이성에게 프러포즈도 많이 받은 당신이지만 관계가 무르익을만하면 깨지는 게 문제입니다.\n"
                      "남들이 보면 콧대 높은 당신이 상대를 먼저 차버린 거라고 생각하겠지만\n"
                      "실상은 상대가 상처를 받을까 봐 먼저 끝내는 경우가 많네요.\n"
                      "이런 당신은 자존심과 잘난체하는 습관을 버리고 양보를 하며 상대를 기다리기보다는 먼저 성숙한 사랑을 상대에게 보여야 합니다.")
            break
        else:
            print("\n\033[31m잘못된 선택입니다. 1에서 4 사이의 번호를 선택해 주세요.\033[0m")

    print("\n\033[33m결과:\033[0m")
    print(result)


# 프로그램 실행
main()